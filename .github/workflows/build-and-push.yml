name: Build and Push to ECR

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_DEBUG: false
          envkey_OPENAI_KEY: ${{ secrets.OPENAI_KEY }}
          envkey_IMAGE_VERSION: ${{ vars.IMAGE_VERSION }}
          file_name: .env
          fail_on_empty: false
          sort_keys: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: ${{ secrets.AWS_DEV_GITHUB_ACTION_ROLE }}
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-skip-session-tagging: true

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Images with Docker Compose
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPO: big-o
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build and push all services defined in docker-compose.yaml
          docker build -t $REGISTRY/$REPO:backend-$IMAGE_TAG -f ./backend/Dockerfile ./backend
          docker push $REGISTRY/$REPO:backend-$IMAGE_TAG
          docker tag $REGISTRY/$REPO:backend-$IMAGE_TAG $REGISTRY/$REPO:backend-latest
          docker push $REGISTRY/$REPO:backend-latest

          docker build -t $REGISTRY/$REPO:frontend-$IMAGE_TAG -f ./frontend/Dockerfile ./frontend
          docker push $REGISTRY/$REPO:frontend-$IMAGE_TAG
          docker tag $REGISTRY/$REPO:frontend-$IMAGE_TAG $REGISTRY/$REPO:frontend-latest
          docker push $REGISTRY/$REPO:frontend-latest

#          docker compose commands below return access token has insufficient scopes error
#          docker compose build
#          docker compose push
#          docker tag big-o-frontend $REGISTRY/big-o-frontend:$IMAGE_TAG
#          docker tag big-o-backend $REGISTRY/big-o-backend:$IMAGE_TAG
#          docker tag big-o-frontend $REGISTRY/big-o-frontend:latest
#          docker tag big-o-backend $REGISTRY/big-o-backend:latest
#           docker compose push


